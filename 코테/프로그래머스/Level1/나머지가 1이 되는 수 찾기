- 문제 설명
자연수 n이 매개변수로 주어집니다. n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요. 답이 항상 존재함은 증명될 수 있습니다.

- 제한사항
3 ≤ n ≤ 1,000,000

입출력 예
n	result
10	3
12	11

입출력 예 설명
입출력 예 #1
10을 3으로 나눈 나머지가 1이고, 3보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 3을 return 해야 합니다.

입출력 예 #2
12를 11로 나눈 나머지가 1이고, 11보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 11을 return 해야 합니다.

- 내 풀이
def solution(n):
    result = 0
    num = n - 1
    for i in range(2, num+1):
        if num % i == 0:
            result = i
            break
    return result

=> 함수만 만들면 되는 건지 모르고, 값을 받아오기 위한 input, print까지 넣었는데, 계속 오답이 나와서 풀이를 보았다.
다들 함수만 생성했더라....함수만 생성하니 정답이라고 떴다.
10이 입력되면 나눴을 때 1이 되는 가장 큰 수는 10에서 1을 뺀 9이고, 9를 만들 수 있는 가장 작은 약수를 가지고 오면 되는 문제라고 생각하여
그렇게 로직을 구성하였다.
그래서 n -1 을 num 값에 대입하고, 2부터 num까지 반복문을 돌면서 약수를 찾는데 이때 가장 작은 약수가 result에 저장되고 return된다.

이 로직의 문제점은 정답이 소수일 경우이다.
그럼 소수의 수까지 갈 동안 for문이 계속 돌아야 하므로 그런 예시에서 시간을 많이 잡아먹을 수 있겠다는 생각을 했다.
이 점은 어떻게 보완할 수 있을까..?
